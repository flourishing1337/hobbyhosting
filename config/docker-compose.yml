x-common-attrs: &common
  restart: unless-stopped
  networks:
    - backend

services:

  ### ───── DATABASE ─────
  database:
    <<: *common
    image: postgres:16-alpine
    container_name: database_service
    env_file: ../.env.${COMPOSE_PROFILE:-dev}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ../services/database_service/init-scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "${POSTGRES_PORT:-5432}:5432"

  ### ───── AUTH SERVICE ─────
  auth_service:
    <<: *common
    build: ../services/auth_service
    container_name: auth_service
    env_file: ../.env.${COMPOSE_PROFILE:-dev}
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database_service:${POSTGRES_PORT:-5432}/${AUTH_DB}
    depends_on:
      - database
    ports:
      - "8000:8000"

  ### ───── MAIL SERVICE ─────
  mail_service:
    <<: *common
    build: ../services/mail_service
    container_name: mail_service
    env_file: ../.env.${COMPOSE_PROFILE:-dev}
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database_service:${POSTGRES_PORT:-5432}/${MAIL_DB}
    depends_on:
      - database
    ports:
      - "5000:5000"

  ### ───── ECOMMERCE BACKEND ─────
  ecommerce_backend:
    <<: *common
    build:
      context: ../services/ecommerce/backend
    container_name: ecommerce_backend
    env_file: ../services/ecommerce/backend/.env.${COMPOSE_PROFILE:-dev}
    environment:
      - DATABASE_URL=postgresql://postgres:mysecurepassword@database_service:5432/ecommerce_db
      - ENV=dev
    depends_on:
      - database
    ports:
      - "8001:8000"

  ### ───── ECOMMERCE FRONTEND ─────
  ecommerce_frontend:
    <<: *common
    build:
      context: ../services/ecommerce/frontend
    container_name: ecommerce_frontend
    env_file:
      - ../.env.${COMPOSE_PROFILE:-dev}
      - ../.env.${COMPOSE_PROFILE:-dev}.frontend
      - ../services/ecommerce/frontend/.env.${COMPOSE_PROFILE:-dev}.local
    depends_on:
      - ecommerce_backend
    ports:
      - "3000:3000"

  ### ───── ADMIN PANEL ─────
  admin_panel:
    <<: *common
    build:
      context: ../apps/admin_panel
    container_name: admin_panel
    env_file:
      - ../.env.${COMPOSE_PROFILE:-dev}
      - ../.env.${COMPOSE_PROFILE:-dev}.frontend
      - ../apps/admin_panel/.env.${COMPOSE_PROFILE:-dev}.local
    depends_on:
      - auth_service
    ports:
      - "3100:3000"

  ### ───── PUBLIC SITE ─────
  public_site:
    <<: *common
    build:
      context: ../apps/public_site
    container_name: public_site
    env_file:
      - ../.env.${COMPOSE_PROFILE:-dev}
      - ../.env.${COMPOSE_PROFILE:-dev}.frontend
      - ../apps/public_site/.env.${COMPOSE_PROFILE:-dev}.local
    depends_on:
      - auth_service
    ports:
      - "8080:3000"

  ### ───── ADMIN SYNC SERVICE ─────
  admin_sync_service:
    <<: *common
    build: ../services/admin_sync_service
    container_name: admin_sync_service
    env_file: ../.env.${COMPOSE_PROFILE:-dev}
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database_service:${POSTGRES_PORT:-5432}/admin_sync_db
    depends_on:
      - database
    ports:
      - "9000:8000"

  ### ───── CADDY (REVERSE PROXY) ─────
  caddy:
    <<: *common
    image: caddy:2-alpine
    container_name: caddy
    depends_on:
      - auth_service
      - mail_service
      - ecommerce_backend
      - ecommerce_frontend
      - admin_panel
      - public_site
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../config/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config

volumes:
  db_data:
  caddy_data:
  caddy_config:

networks:
  backend:
    driver: bridge
