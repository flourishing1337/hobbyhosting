# config/docker-compose.yml
version: '3.9'

x-common-attrs: &common
  restart: unless-stopped
  networks:
    - backend

services:

  ### ───── DATABASE ─────
  database:
    <<: *common
    image: postgres:16-alpine
    container_name: database_service
    env_file: .env.${COMPOSE_PROFILE:-dev}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ../services/database_service/init-scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    ports:
      - "${POSTGRES_PORT:-5432}:5432"

  ### ───── AUTH SERVICE ─────
  auth_service:
    <<: *common
    build: ../services/auth_service
    container_name: auth_service
    env_file: .env.${COMPOSE_PROFILE:-dev}
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${AUTH_DB}
    depends_on:
      - database
    expose:
      - "8000"

  ### ───── MAIL SERVICE ─────
  mail_service:
    <<: *common
    build: ../services/mail_service
    container_name: mail_service
    env_file: .env.${COMPOSE_PROFILE:-dev}
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${MAIL_DB}
    depends_on:
      - database
    ports:
      - "5000:5000"

  ### ───── ECOM BACKEND ─────
  ecom_backend:
    <<: *common
    build:
      context: ../services/ecom/backend
    container_name: ecom_backend
    env_file: ../services/ecom/backend/.env.${COMPOSE_PROFILE:-dev}
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${ECOM_DB}
    depends_on:
      - database
    ports:
      - "8001:8000"

  ### ───── ECOM FRONTEND ─────
  ecom_frontend:
    <<: *common
    build:
      context: ../services/ecom/frontend
    container_name: ecom_frontend
    depends_on:
      - ecom_backend
    ports:
      - "3000:3000"

  ### ───── ADMIN FRONTEND ─────
  admin_frontend:
    <<: *common
    build:
      context: ../services/admin_frontend
    container_name: admin_frontend
    depends_on:
      - auth_service
    ports:
      - "3100:3000"

  ### ───── MAIN FRONTEND ─────
  hobbyhosting_frontend:
    <<: *common
    build:
      context: ../apps/hobbyhosting-frontend
    container_name: hobbyhosting_frontend
    depends_on:
      - auth_service
    ports:
      - "8080:3000"

  ### ───── CADDY ─────
  caddy:
    <<: *common
    image: caddy:2-alpine
    container_name: caddy
    depends_on:
      - auth_service
      - mail_service
      - ecom_backend
      - ecom_frontend
      - admin_frontend
      - hobbyhosting_frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../config/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config

volumes:
  db_data:
  caddy_data:
  caddy_config:

networks:
  backend:
    driver: bridge
